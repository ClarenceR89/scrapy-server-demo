// For format details, see https://aka.ms/vscode-remote/devcontainer.json or the definition README at
// https://github.com/microsoft/vscode-dev-containers/tree/master/containers/dotnetcore-latest
{
	"name": "Scrapy Server Dev",
	"dockerComposeFile": "../docker-compose.yml",
	"service": "dev-app",
	"workspaceFolder": "/workspace",
	"shutdownAction": "stopCompose",
	// Use 'settings' to set *default* container specific settings.json values on container create.
	// You can edit these settings after create using File > Preferences > Settings > Remote.
	// Use 'settings' to set *default* container specific settings.json values on container create.
	// You can edit these settings after create using File > Preferences > Settings > Remote.
	"settings": {
		"terminal.integrated.shell.linux": "/bin/bash",
		"python.pythonPath": "/usr/local/bin/python",
		"python.linting.enabled": true,
		"python.linting.pylintEnabled": true,
		"python.linting.pylintPath": "/usr/local/bin/pylint",
		"remote.extensionKind": {
			"ms-azuretools.vscode-docker": "workspace"
		}
	},
	"runArgs": [
		// Uncomment the next line to use a non-root user. On Linux, this will prevent
		// new files getting created as root, but you may need to update the USER_UID
		// and USER_GID in .devcontainer/Dockerfile to match your user if not 1000.
		// "-u", "vscode",
		// Uncomment the next line if you will use a ptrace-based debugger like C++, Go, and Rust.
		// "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined",
		"-v",
		"/var/run/docker.sock:/var/run/docker.sock"
	],
	// Uncomment the next line if you want to publish any ports.
	"appPort": [
		8050,
		6800
	],
	// Uncomment the next line to run commands after the container is created.
	"postCreateCommand": "pip install --upgrade pip && pip install -r requirements.txt",
	// Add the IDs of extensions you want installed when the container is created in the array below.
	"extensions": [
		"ms-python.python",
		"ms-azuretools.vscode-docker"
	]
}
